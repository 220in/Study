package 인터페이스;

public interface Codable {
	인터페이스란?
	프로젝트의 큰 설계도 or 작업명세서
	설계된 기능을 다시 구현하도록 강제성을 부여하는 역할
	구현(상속)하는 객체들의 같은 동작을 보장
	
	 인터페이스의 특징
	// 1) 인터페이스는 반드시 추상메소드만 가질 수 있다.
	// 2) abstract 키워드 생략이 가능하다.
	// 3) 객체생성이 불가능하다.
	// 4) 인터페이스는 필드로 상수만 가질 수 있다.
	// 5) final 키워드 생략이 가능하다.
	
	// 필드 영역
	int grade = 7;
	
	// 메소드 영역
	public void Coding ();
	
	// Java7 버전 이후부터 접근제한자 default , 저장영역이 static이면
	// 인터페이스에서도 일반 메소드 선언이 가능하다.
	static void temp() {
		System.out.println("굳이 외우지는 않아도 됨");
	}

}
