Android
[ 액티비티 생명주기]
onCreate-> onStart -> onResume -> onPause -> onStop

최초로 앱을 실행하면 onCreate가 호출됩니다.
다음으로는 onStart가 호출되고 이 시점부터 사용자가 액티비티를 볼 수 있습니다.
액티비티가 실제 사용자와 상호작용이 가능한 포그라운드에 위치하면 onResume이 호출됩니다.
반대로 상호작용이 불가능한 상태가 되면 onPause가 호출됩니다.
onStop은 액티비티가 더 이상 보이지 않을 때 호출되고
액티비티가 종료되거나 앱 프로세스 자체가 종료되면 onDestroy가 호출됩니다.

[프로세스와 스레드의 차이점]
프로세스 : 운영체제로부터 자원을 할당받은 작업의 단위
스레드 : 프로세스가 할당받은 자원을 이용하는 실행 흐름의 단위

스레드는 프로세스 안에 포함되어있습니다.
운영체제가 프로세스에게 code/data/stack/heap 메모리 영역을 할당해주고
최소 작업 단위로 삼는 반면, 스레드는 프로세스 내에서 Stack 메모리 영역을 
제외한 다른 메모리 영역을 같은 프로세스 내 다른 스레드와 공유합니다.
프로세스는 다른 프로세스와 정보를 공유하려면 IPC를 사용하는 등의 번거로운
과정을 거쳐야 하지만, 스레드는 기본 구조 자체가 메모리를 공유하는 구조이기
때문에 다른 스레드와 정보 공유가 쉽다는 장점이 있습니다.

[Thread 간 통신방법에 대해 설명]
Handler를 이용하여 두개 이상의 스레드를 사용할 때의 동기화 이슈를 차단하기 위해
Looper와 Handler를 사용한다

[Handler 설명]
Handler는 Looper로부터 받은 Message를 실행, 처리하거나 다른 스레드로부터
메시지를 받아서 Message Queue에 넣는 역할을 하는 스레드 간의 통신 장치이다.

[Looper에 대한 설명]
Looper는 무한히 루프를 돌며 자신이 속한 스레드의 Message Queue에서 Message나 Runnable 객체를
차례대로 꺼내 Handler 가 처리하도록 전달한다.

[Context에 대해 설명]
현재 사용되고 있는 어플리케이션에 대한 포괄적인 정보를 지니고 있는 객체

[ XML 기반 레이아웃은 왜 중요한가?]
동작을 제어하는 코드로부터 따로 표시하기가 더 좋음, UI의 구조를 시각화하기 더 쉬움

[Manifest 설명]
애플리케이션에 대한 필수적인 정보를 안드로이드 플랫폼에 알려준다.
모든 안드로이드 앱은 반드시AndroidManifest.xml 파일을 자신의 루트 디텍토리에 가지고 있어야한다.



Java

[오버라이딩과 오버로딩의 차이]
오버라이딩은 메소드를 변형하여 기능을 추가 하거나 재정의 하여 사용하는 것이고
오버로딩은 중복정의로 매개벼수의 개수를 다르게 하고 메소드의 이름을 똑같이 부여하여
여러개의 메소드를 사용할 수 있도록 하는 것입니다.

[Collection이란?]
데이터의 집합, 그룹을 의미하며 순서나 집합적인 저장공간으로
List는 순서있는 저장공간 데이터의 중복을 허용
Set은 순서가 없는 데이터 집합 , 데이터 중복 불허
Map은 키와 값이 한쌍으로 이루어지는 데이터의 집합으로
순서가 없고, 중복을 허용하지 않지만, 값은 중복될 수 있다.

[객체와 클래스 차이점]
클래스는 객체를 생성하기 위한 설계도 또는 틀, 객체는 설계도 또는 틀로 찍어낸 실체로
클래스는 객체들이 어떤 특성을 갖는다고 정의만하고 값은 가질 수 없으나
객체는 실존하며 각각 자신만의 고유한 속성 값을 갖는다.

[추상화란?]
어떤 객체를 표현함에 있어 모든 것을 다 표현하는 것이 아니라 일정 부분 특징만을 표현
추상화를 하게되면 목적을 위해 필요한 부분만을 찾을 수 있다.

[추상 클래스란?]
추상 메소드 선언은 되어있으나 코드는 구현되어있지 않고 껍데기만 있는
메소드를 포함하는 클래스이다.
* 추상 클래스를 이용하면 응용프로그램의 설계와 구현을 분리할 수 있다.

[인터페이스란?]
자바의 인터페이스는 추상클래스와 유사하다.
인터페이스는 객체를 생성할 수 없으며 인터페이스는 사용될 클래스가
어떠한 메소드 , 멤버들을을 갖고 있는가에 대한 명세서와 같은 역할을 한다.

[추상클래스와 인터페이스의 차이점]
추상클래스는 일반메소드를 포함가능하나 인터페이스는 모든 메소드가 추상메소드이며
추상클래스는 상수 필드만 포함 가능하고 인터페이스는 상수, 변수 필드 모두 포함가능하다
또한 인터페이스는 다중상속을 지원한다.

